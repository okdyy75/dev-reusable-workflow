name: Create Draft Release Action
description: Create draft release with calver tag

outputs:
  draft-release-link:
    description: Create draft release link.
    value: ${{ steps.create-draft-release.outputs.draft-release-link }}
  draft-release-tag:
    description: Create draft release tag.
    value: ${{ steps.create-draft-release.outputs.draft-release-tag }}

runs:
  using: "composite"
  steps:
    - name: Create Draft Release
      id: create-draft-release
      env:
        TZ: "Asia/Tokyo"
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        # 最新のタグ取得
        latest_tag=$(gh release list --repo '${{ github.repository }}' | awk -F'\t' '$2=="Latest" { print $3 }')
        echo "latest_tag:${latest_tag}"

        # calver形式での次バージョンのタグ取得
        next_tag=$(/bin/bash ${{ github.action_path }}/calver.sh $latest_tag)
        echo "next_tag:${next_tag}"

        # draft release 取得（下書きリリースノート削除にgh release deleteを使用すると、公開リリースノートと下書きリリースノートで同じtagのものが存在した場合に公開リリースノートの方が削除される可能性があるので、api経由で取得したidを使って削除する
        # ref: https://docs.github.com/ja/free-pro-team@latest/rest/releases/releases?apiVersion=2022-11-28#list-releases
        draft_release=$(
          gh api '/repos/${{ github.repository }}/releases' \
            --jq '[.[] | select(.draft == true)][0]'
        )
        draft_tag=$(echo $draft_release | jq -r '.tag_name')
        draft_tag_id=$(echo $draft_release | jq -r '.id')
        echo "draft_tag:${draft_tag}"
        echo "draft_tag_id:${draft_tag_id}"

        # draft release が既に存在していれば、削除してから再作成（リリースノートの自動生成を使いたいため）
        if [ "$draft_tag_id" != "" ]; then
          gh api \
            --method DELETE \
            "/repos/${{ github.repository }}/releases/${draft_tag_id}"
        fi
        draft_release_link=$(
          gh release create $next_tag \
            --repo '${{ github.repository }}' \
            --title "Release ${next_tag}" \
            --latest --draft --generate-notes
        )
        echo "draft-release-link=${draft_release_link}" >> "${GITHUB_OUTPUT}"
        echo "draft-release-tag=${next_tag}" >> "${GITHUB_OUTPUT}"
        echo $draft_release_link
